name: $(Date:yyyyMMdd)$(Rev:-rrr)

trigger:
  batch: true
  branches:
    include:
    - master
    exclude:
    - features/*
    - features/experimental/*
  paths:
    exclude:
    - README.md

pr:
  branches:
    include:
    - master
    - features/*
    exclude:
    - features/experimental/*
  paths:
    exclude:
    - README.md

pool:
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 3.1.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: NuGetToolInstaller@0
  displayName: 'Install NuGet v4.x'
  inputs:
    versionSpec: '4.x'
    checkLatest: false

- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: restore
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: 'Publish self-contained project output to artifacts'
  inputs:
    command: publish
    configuration: '$(buildConfiguration)'
    projects: '**/Seq.Input.MSSql.csproj'
    arguments: '--output .\obj\publish --self-contained'
    publishWebProjects: false
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  displayName: 'Pack prerelease NuGet from branch'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), in(variables['Build.Reason'], 'PullRequest'))
  inputs:
    command: pack
    configuration: '$(buildConfiguration)'
    packagesToPack: '**/Seq.Input.MSSql.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)\packages'
    buildProperties: 'VersionSuffix=pre-$(Build.BuildNumber)'

- task: PublishPipelineArtifact@1
  displayName: 'Publish prerelease NuGet to Pipeline Artifact'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'), in(variables['Build.Reason'], 'PullRequest'))
  inputs:
    artifactType: pipeline
    artifactName: 'packages'
    targetPath: '$(Build.ArtifactStagingDirectory)\packages'

- task: DotNetCoreCLI@2
  displayName: 'Pack official NuGet from master'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: pack
    configuration: '$(buildConfiguration)'
    packagesToPack: '**/Seq.Input.MSSql.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)\packages'

- task: NuGetCommand@2
  displayName: 'Push NuGet as official release from master'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)\packages\*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: '$(nuget.credentials)'
